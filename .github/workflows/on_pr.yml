---
name: Pull Request

on:
  pull_request:
    branches:
      - main

# Set workflow-wide environment variables
#  - REPO: repo name on dockerhub
#  - IMAGE: image name on dockerhub
env:
  #  DOCKERHUB_REPO: sdr-enthusiasts
  #  DOCKERHUB_IMAGE: vrs
  GHCR_IMAGE: sdr-enthusiasts/docker-adsb-ultrafeeder
  GHCR_REGISTRY: ghcr.io
  GH_LABEL: main
  GHCR_TAG: latest

jobs:
  hadolint:
    name: Run hadolint against docker files
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3015 --ignore DL3003 --ignore DL3006 --ignore DL3010 --ignore DL4001 --ignore DL3007 --ignore DL3008 --ignore SC2068 --ignore DL3007 --ignore SC1091 --ignore DL3013 --ignore DL3010 $(find . -type f -iname "Dockerfile*")

  precommit:
    name: Run pre-commit
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: pre-commit/action@v3.0.1

  deploy:
    name: Deploy without telegraf
    needs: precommit
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: false
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      # set build_latest to true if github.event.inputs.use_test_image is false
      build_latest: true
      build_baseimage_test: false
      build_baseimage_url: docker-tar1090:latest/docker-tar1090:baseimage-test
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  deploy_with_telegraf:
    name: Deploy with telegraf and healthcheck
    needs: precommit
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: false
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      # set build_latest to true if github.event.inputs.use_test_image is false
      build_latest: true
      build_baseimage_test: false
      build_baseimage_url: docker-tar1090:telegraf/docker-tar1090:telegraf-baseimage-test
      docker_latest_tag: telegraf
      dockerfile_changes: |
        docker-tar1090:latest/docker-tar1090:telegraf

    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}
